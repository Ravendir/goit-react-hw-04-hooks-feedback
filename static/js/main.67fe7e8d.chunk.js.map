{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","App.module.css","components/Notification/Notification.module.css","components/Section/Section.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["module","exports","Section","title","children","className","style","content","Statistics","good","neutral","bad","total","percentage","list","item","protType","ProtType","number","FeedbackOptions","options","onLeaveFeedback","boxBtn","map","name","id","button","type","onClick","Notification","message","propType","PropTypes","string","App","useState","setGood","setNeutral","setBad","countTotalFeedback","positivePercentage","Math","round","conteiner","feedBack","prevGood","prevNeutral","prevBad","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4IACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,2B,kBCAzDD,EAAOC,QAAU,CAAC,MAAQ,yB,gBCA1BD,EAAOC,QAAU,CAAC,OAAS,gCAAgC,OAAS,kC,iBCApED,EAAOC,QAAU,CAAC,UAAY,yB,gBCA9BD,EAAOC,QAAU,CAAC,MAAQ,8B,6HCaXC,EAXC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,sBAAKC,UAAWC,IAAMC,QAAtB,UACE,oBAAIF,UAAWC,IAAMH,MAArB,SAA6BA,IAC5BC,M,gCCHCI,EAAa,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,IAAKC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAC/C,OACE,qBAAIR,UAAWC,IAAMQ,KAArB,UACE,qBAAIT,UAAWC,IAAMS,KAArB,mBAAkCN,KAClC,qBAAIJ,UAAWC,IAAMS,KAArB,sBAAqCL,KACrC,qBAAIL,UAAWC,IAAMS,KAArB,kBAAiCJ,KACjC,qBAAIN,UAAWC,IAAMS,KAArB,oBAAmCH,KACnC,qBAAIP,UAAWC,IAAMS,KAArB,gCAA+CF,EAA/C,WAKNL,EAAWQ,SAAW,CACpBP,KAAMQ,IAASC,OACfR,QAASO,IAASC,OAClBP,IAAKM,IAASC,OACdN,MAAOK,IAASC,OAChBL,WAAYI,IAASC,QAGRV,Q,gBCAAW,EApBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,qBAAKhB,UAAWC,IAAMgB,OAAtB,SACGF,EAAQG,KAAI,SAACC,EAAMC,GAAP,OACX,wBAEEpB,UAAWC,IAAMoB,OACjBC,KAAK,SACLC,QAAS,kBAAMP,EAAgB,CAAEG,UAJnC,SAMGA,GALIC,S,iBCJPI,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,oBAAIzB,UAAWC,IAAMH,MAArB,SAA6B2B,KAG/BD,EAAaE,SAAW,CACtBD,QAASE,IAAUC,QAGNJ,QCsDAK,EA1DH,WACV,MAAwBC,mBAAS,GAAjC,mBAAO1B,EAAP,KAAa2B,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOzB,EAAP,KAAgB2B,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOxB,EAAP,KAAY2B,EAAZ,KAmBMC,EAAqB,WACzB,OAAO9B,EAAOC,EAAUC,GAOpBC,EAAQ2B,IACRC,EAJGC,KAAKC,MAAOjC,EAAO8B,IAAwB,KAMpD,OACE,sBAAKlC,UAAWC,IAAMqC,UAAtB,UACE,cAAC,EAAD,CAASxC,MAAM,wBAAf,SACE,cAAC,EAAD,CACEiB,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAjCY,SAACuB,GAEnB,OAAQA,GACN,IAAK,OACHR,GAAQ,SAACS,GAAD,OAAcA,EAAW,KACjC,MAEF,IAAK,UACHR,GAAW,SAACS,GAAD,OAAiBA,EAAc,KAC1C,MAEF,IAAK,MACHR,GAAO,SAACS,GAAD,OAAaA,EAAU,WAwBhC,cAAC,EAAD,CAAS5C,MAAM,aAAf,SACGoC,IACC,cAAC,EAAD,CACE9B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,WAAY2B,IAGd,cAAC,EAAD,CAAcV,QAAQ,4BCtDhCkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.67fe7e8d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__2tr84\",\"item\":\"Statistics_item__1sGeU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__3h4-O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"boxBtn\":\"FeedbackOptions_boxBtn__39xUF\",\"button\":\"FeedbackOptions_button__175Xz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"conteiner\":\"App_conteiner__2uDIf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Notification_title__3xvLR\"};","import PropTypes from \"prop-types\";\nimport style from \"./Section.module.css\";\n\nconst Section = ({ title, children }) => (\n  <div className={style.content}>\n    <h2 className={style.title}>{title}</h2>\n    {children}\n  </div>\n);\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Section;\n","import ProtType from \"prop-types\";\nimport style from \"./Statistics.module.css\";\n\nconst Statistics = ({ good, neutral, bad, total, percentage }) => {\n  return (\n    <ul className={style.list}>\n      <li className={style.item}>Good: {good}</li>\n      <li className={style.item}>Neutral: {neutral}</li>\n      <li className={style.item}>Bad: {bad}</li>\n      <li className={style.item}>Total: {total}</li>\n      <li className={style.item}>Positive feedback: {percentage}%</li>\n    </ul>\n  );\n};\n\nStatistics.protType = {\n  good: ProtType.number,\n  neutral: ProtType.number,\n  bad: ProtType.number,\n  total: ProtType.number,\n  percentage: ProtType.number,\n};\n\nexport default Statistics;\n","import PropTypes from \"prop-types\";\nimport style from \"./FeedbackOptions.module.css\";\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n  <div className={style.boxBtn}>\n    {options.map((name, id) => (\n      <button\n        key={id}\n        className={style.button}\n        type=\"button\"\n        onClick={() => onLeaveFeedback({ name })}\n      >\n        {name}\n      </button>\n    ))}\n  </div>\n);\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  onLeaveFeedback: PropTypes.func,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from \"prop-types\";\nimport style from \"./Notification.module.css\";\n\nconst Notification = ({ message }) => (\n  <h3 className={style.title}>{message}</h3>\n);\n\nNotification.propType = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import { useState } from \"react\";\nimport style from \"./App.module.css\";\nimport Section from \"./components/Section\";\nimport Statistics from \"./components/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const addFeedback = (feedBack) => {\n    // eslint-disable-next-line default-case\n    switch (feedBack) {\n      case \"good\":\n        setGood((prevGood) => prevGood + 1);\n        break;\n\n      case \"neutral\":\n        setNeutral((prevNeutral) => prevNeutral + 1);\n        break;\n\n      case \"bad\":\n        setBad((prevBad) => prevBad + 1);\n        break;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    return Math.round((good / countTotalFeedback()) * 100);\n  };\n\n  const total = countTotalFeedback();\n  const positivePercentage = countPositiveFeedbackPercentage();\n\n  return (\n    <div className={style.conteiner}>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={[\"good\", \"neutral\", \"bad\"]}\n          onLeaveFeedback={addFeedback}\n        />\n      </Section>\n      <Section title=\"Statistics\">\n        {countTotalFeedback() ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            percentage={positivePercentage}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}